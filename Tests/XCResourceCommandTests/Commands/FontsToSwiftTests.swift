import XCTest
import TestUtil
import SampleData
@testable import XCResourceCommand

private enum Seed {
    static let fontKey = """
    // This file was generated by xcresource
    // Do Not Edit Directly!
    
    public struct FontKey: Hashable {
        public var fontName: String
        public var familyName: String
        public var style: String
        public var path: String
        
        public init(fontName: String, familyName: String, style: String, path: String) {
            self.fontName = fontName
            self.familyName = familyName
            self.style = style
            self.path = path
        }
    }
    
    public extension FontKey {
        // MARK: Avenir
        
        static let avenir_book: FontKey = .init(
            fontName: "Avenir-Book",
            familyName: "Avenir",
            style: "Book",
            path: "Avenir.ttc")
        
        static let avenir_bookOblique: FontKey = .init(
            fontName: "Avenir-BookOblique",
            familyName: "Avenir",
            style: "Book Oblique",
            path: "Avenir.ttc")
    """
}

final class FontsToSwiftTests: XCTestCase {
    func test_runAsRoot() throws {
        // Given
        let fm = FileManager.default
        
        let swiftFileURL = fm.temporaryDirectory.appendingPathComponent(UUID().uuidString)
        
        defer {
            try? fm.removeItem(at: swiftFileURL)
        }
        
        // When
        try FontsToSwift.runAsRoot(arguments: [
            "--fonts-path", SampleData.fontDirectoryURL().path,
            "--swift-path", swiftFileURL.path,
            "--key-type-name", "FontKey",
            "--access-level", "public",
        ])
        
        // Then
        let generatedKey = String(try String(contentsOf: swiftFileURL).prefix(Seed.fontKey.count))
        
        XCTAssertEqual(generatedKey, Seed.fontKey)
    }
}
